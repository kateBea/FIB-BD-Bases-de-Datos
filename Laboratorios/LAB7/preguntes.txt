Implementar mitjançant disparadors la restricció d'integritat següent:
No es pot esborrar l'empleat 123 ni modificar el seu número d'empleat.

Cal informar dels errors a través d'excepcions tenint en compte les situacions tipificades a la taula 
missatgesExcepcions, que podeu trobar definida (amb els inserts corresponents) al fitxer adjunt. Concretament 
en el vostre procediment heu d'incloure, quan calgui, les sentències:SELECT texte INTO missatge 
FROM missatgesExcepcions WHERE num=__; (el número que sigui, depenent de l'error)
RAISE EXCEPTION '%',missatge;
La variable missatge ha de ser una variable definida al vostre procediment, i del mateix tipus que 
l'atribut corresponent de l'esquema de la base de dades.

Pel joc de proves que trobareu al fitxer adjunt i la instrucció:
DELETE FROM empleats WHERE nempl=123;
La sortida ha de ser:

No es pot esborrar l'empleat 123 ni modificar el seu número d'empleat

	- Solució:
	CREATE OR REPLACE FUNCTION delete_check() 
	RETURNS TRIGGER AS $$
	DECLARE
		dia_actual dia.dia%type;
		missatge missatgesExcepcions.texte%type;

	BEGIN
		SELECT dia INTO dia_actual FROM dia;
		IF (dia_actual = 'dijous') THEN
			SELECT texte INTO missatge FROM missatgesExcepcions WHERE num = 1;
			RAISE EXCEPTION '%', missatge;
		ELSE RETURN OLD;
		END IF;

		EXCEPTION
		WHEN raise_exception THEN 
			RAISE EXCEPTION '%', SQLERRM;
	END;
	$$ LANGUAGE plpgsql;

	CREATE TRIGGER trigger BEFORE DELETE ON empleats FOR EACH STATEMENT
	EXECUTE PROCEDURE delete_check();



	
En aquest exercici es tracta de mantenir de manera automàtica, mitjançant triggers, l'atribut derivat import de la 
taula comandes.

En concret, l'import d'una comanda és igual a la suma dels resultats de multiplicar per cada línia de comanda, la 
quantitat del producte de la línia pel preu del producte.

Només heu de considerar les operacions de tipus INSERT sobre la taula línies de comandes.

Pel joc de proves que trobareu al fitxer adjunt, i la senténcia: INSERT INTO liniesComandes VALUES (110, 'p111', 2);
La senténcia s'executa sense cap problema, i l'estat de la taula de comandes després de la seva execució ha de ser:

numcomanda		instantfeta		instantservida		numtelf		import
110		1091		1101		null		30

	- Solució:
	CREATE OR REPLACE FUNCTION delete_check() 
	RETURNS TRIGGER AS $$
	DECLARE
		import_previ comandes.import%TYPE;

	BEGIN
		import_previ := (SELECT import FROM comandes WHERE numComanda = NEW.numComanda);

		UPDATE comandes
		SET import = import_previ +  NEW.quantitat * (SELECT preu FROM productes WHERE idProducte = NEW.idProducte)
		WHERE numComanda = NEW.numComanda;

		RETURN NULL;
	END;
	$$LANGUAGE plpgsql;

	CREATE TRIGGER insert_linia_comandes AFTER INSERT ON liniesComandes FOR EACH ROW
	EXECUTE PROCEDURE delete_check();